<!doctype html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">

    <title>Burndown App</title>
    
    <base href="<%= @base_url %>"/>

    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/rickshaw.css">
  <!--  <link rel="stylesheet" type="text/css" href="css/style.css"> -->
     <link rel="stylesheet" type="text/css" href="http://projectmeniscus.org/css/bootstrap.min.css">

    <script src="js/d3.min.js"></script>
    <script src="js/d3.layout.min.js"></script>
    <script src="js/rickshaw.min.js"></script>
     <style type="text/css">
        body {
            padding: 20px;
                   }

            /* Custom container */
        .container {
            margin: 0 auto;
            width: 100%;
        }
        .container > hr {
            margin: 60px 0;
        }
.rickshaw_graph .x_tick.glow .title, .rickshaw_graph .y_ticks.glow text {
    color: whitesmoke;
    fill: whitesmoke;
    text-shadow: -1px 1px 0 rgba(255, 255, 255, 0.1), 1px -1px 0 rgba(255, 255, 255, 0.1), 1px 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1), 0 -1px 0 rgba(255, 255, 255, 0.1), 1px 0 0 rgba(255, 255, 255, 0.1), -1px 0 0 rgba(255, 255, 255, 0.1), -1px -1px 0 rgba(255, 255, 255, 0.1);
}
    </style>
</head>
<body>
   <div class="container">

<div class="masthead">
    <h1>
        <img src="http://projectmeniscus.org/img/Meniscus-Logo-Small.png" />&nbsp;&nbsp;&nbsp;<a href="http://projectmeniscus.org" style="text-decoration: none;">Project Meniscus</a>
    </h1>
    
    <div class="navbar">
        <div class="navbar-inner">
            <div class="container">
                <ul class="nav">
                    <li class="active"><a href="#"><i class="icon-signal icon-white"></i> Burn Down</a></li>
		    <li><a href="http://meniscus.herokuapp.com/ProjectMeniscus/meniscus/backlog"> Backlog</a></li>
                   <li><a href="http://meniscus.herokuapp.com/ProjectMeniscus/meniscus/board"><i class="icon-signal icon-white"></i> Tasks</a></li>
                        
                    <li><a href='http://jenkins.projectmeniscus.org/job/Meniscus/'>
                        <img src='http://jenkins.projectmeniscus.org/job/Meniscus/badge/icon'></a>
                    </li>
                </ul>
            </div>
        </div>
    </div><!-- /.navbar -->

    <div class="row-fluid">
        <div class="span12">
            <div id="chart"></div>
            <div id="timeline"></div>
        </div>
    </div>
           
</div>
<script>
(function() {
    var now = new Date().getTime();

    var ideal = [], actual = [], issues = {}, i = 0;
    <% for day, data of @days: %>
        ideal.push({ 'x': <%= day / 1000 %>, 'y': <%= data['ideal'] %> });
        actual.push({ 'x': <%= day / 1000 %>, 'y': <%= data['actual'] %> });

        // Fill up issues object.
        <% if data['issues'].length > 0: %>
            issues[<%= day %>] = [];
            <% for issue in data['issues']: %>
                issues[<%= day %>].push('<%= issue['title'] %>');
            <% end %>
        <% end %>

        i++;
    <% end %>

    // Early exit to avoid Rickshaw error.
    if (actual.length == 0) return;

    // The line graph.
    var graph = new Rickshaw.Graph({
        element: document.querySelector("#chart"),
        height: 600,
        renderer: 'line',
        series: [{
            data:  ideal,
            color: '#75ABC5',
            name:  'Ideal'
        }, {
            data:  actual,
            color: '#F89406',
            name:  'Actual'
        }]
    });

    graph.render();

    // Onhover.
    var hoverDetail = new Rickshaw.Graph.HoverDetail({
        graph:      graph,
        xFormatter: function(d) { return new Date(d * 1000).toUTCString().substring(0, 11) },
        formatter:  function(series, stamp, points) {
            if (series.name == 'Ideal') {
                return '<p>Ideally ' + Math.round(points) + ' points left</p>'
            } else {
                var left = '<p>' + Math.round(points) + ' points left</p>';
                // Have we closed any issues today?
                var iss = issues[stamp * 1000];
                if (iss) {
                    var string = '<ul>';
                    for (var i = 0; i < iss.length; i++) {
                        string += '<li><span class="icon-ok icon-white"></span>&nbsp;&nbsp;' + unescape(iss[i]) + '</li>';
                    }
                    string += '</ul>';
                    return left + string;
                } else {
                    return left;
                }
            }
        }
    });

    // Axes.
    var xAxis = new Rickshaw.Graph.Axis.Time({
        graph:          graph,
        ticksTreatment: 'glow'
    });

    var yAxis = new Rickshaw.Graph.Axis.Y({
        graph:          graph,
        tickFormat:     Rickshaw.Fixtures.Number.formatKMBT,
        ticksTreatment: 'glow'
    });

    xAxis.render();
    yAxis.render();

    // Annotations.
    var annotator = new Rickshaw.Graph.Annotate({
        graph:   graph,
        element: document.getElementById('timeline')
    });

    annotator.add(now / 1000, 'Now');
    annotator.update();
})();
</script>

</body>
</html>
